#!/bin/bash

echo ""
echo "Applying migration SalaryQuestion"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /salaryQuestion                        controllers.SalaryQuestionController.onPageLoad(mode: Mode = NormalMode)" >> ../conf/app.routes
echo "POST       /salaryQuestion                        controllers.SalaryQuestionController.onSubmit(mode: Mode = NormalMode)" >> ../conf/app.routes

echo "GET        /changeSalaryQuestion                  controllers.SalaryQuestionController.onPageLoad(mode: Mode = CheckMode)" >> ../conf/app.routes
echo "POST       /changeSalaryQuestion                  controllers.SalaryQuestionController.onSubmit(mode: Mode = CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "salaryQuestion.title = salaryQuestion" >> ../conf/messages.en
echo "salaryQuestion.heading = salaryQuestion" >> ../conf/messages.en
echo "salaryQuestion.salary = salary" >> ../conf/messages.en
echo "salaryQuestion.field2 = field2" >> ../conf/messages.en
echo "salaryQuestion.checkYourAnswersLabel = salaryQuestion" >> ../conf/messages.en
echo "salaryQuestion.error.salary.required = Enter salary" >> ../conf/messages.en
echo "salaryQuestion.error.field2.required = Enter field2" >> ../conf/messages.en
echo "salaryQuestion.error.salary.length = salary must be 5 characters or less" >> ../conf/messages.en
echo "salaryQuestion.error.field2.length = field2 must be 100 characters or less" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/trait UserAnswersEntryGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitrarySalaryQuestionUserAnswersEntry: Arbitrary[(SalaryQuestionPage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[SalaryQuestionPage.type]";\
    print "        value <- arbitrary[SalaryQuestion].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitrarySalaryQuestionPage: Arbitrary[SalaryQuestionPage.type] =";\
    print "    Arbitrary(SalaryQuestionPage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/trait ModelGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitrarySalaryQuestion: Arbitrary[SalaryQuestion] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        salary <- arbitrary[String]";\
    print "        field2 <- arbitrary[String]";\
    print "      } yield SalaryQuestion(salary, field2)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(SalaryQuestionPage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Migration SalaryQuestion completed"
