#!/bin/bash

echo ""
echo "Applying migration NicCategory"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /nicCategory                        controllers.NicCategoryController.onPageLoad(mode: Mode = NormalMode)" >> ../conf/app.routes
echo "POST       /nicCategory                        controllers.NicCategoryController.onSubmit(mode: Mode = NormalMode)" >> ../conf/app.routes

echo "GET        /changeNicCategory                  controllers.NicCategoryController.onPageLoad(mode: Mode = CheckMode)" >> ../conf/app.routes
echo "POST       /changeNicCategory                  controllers.NicCategoryController.onSubmit(mode: Mode = CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "nicCategory.title = What is the employee's National Insurance category letter?" >> ../conf/messages.en
echo "nicCategory.heading = What is the employee's National Insurance category letter?" >> ../conf/messages.en
echo "nicCategory.payable = A, B, C, J" >> ../conf/messages.en
echo "nicCategory.nonPayable = H, M, Z" >> ../conf/messages.en
echo "nicCategory.checkYourAnswersLabel = What is the employee's National Insurance category letter?" >> ../conf/messages.en
echo "nicCategory.error.required = Select nicCategory" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/trait UserAnswersEntryGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryNicCategoryUserAnswersEntry: Arbitrary[(NicCategoryPage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[NicCategoryPage.type]";\
    print "        value <- arbitrary[NicCategory].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryNicCategoryPage: Arbitrary[NicCategoryPage.type] =";\
    print "    Arbitrary(NicCategoryPage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/trait ModelGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryNicCategory: Arbitrary[NicCategory] =";\
    print "    Arbitrary {";\
    print "      Gen.oneOf(NicCategory.values.toSeq)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(NicCategoryPage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Migration NicCategory completed"
