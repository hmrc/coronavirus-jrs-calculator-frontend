#!/bin/bash

echo ""
echo "Applying migration PartTimeQuestion"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /partTimeQuestion                        controllers.PartTimeQuestionController.onPageLoad(mode: Mode = NormalMode)" >> ../conf/app.routes
echo "POST       /partTimeQuestion                        controllers.PartTimeQuestionController.onSubmit(mode: Mode = NormalMode)" >> ../conf/app.routes

echo "GET        /changePartTimeQuestion                  controllers.PartTimeQuestionController.onPageLoad(mode: Mode = CheckMode)" >> ../conf/app.routes
echo "POST       /changePartTimeQuestion                  controllers.PartTimeQuestionController.onSubmit(mode: Mode = CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "partTimeQuestion.title = Has this employee done any work during the claim period?" >> ../conf/messages.en
echo "partTimeQuestion.heading = Has this employee done any work during the claim period?" >> ../conf/messages.en
echo "partTimeQuestion.partTimeYes = Yes" >> ../conf/messages.en
echo "partTimeQuestion.partTimeNo = No" >> ../conf/messages.en
echo "partTimeQuestion.checkYourAnswersLabel = Has this employee done any work during the claim period?" >> ../conf/messages.en
echo "partTimeQuestion.error.required = Select partTimeQuestion" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/trait UserAnswersEntryGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryPartTimeQuestionUserAnswersEntry: Arbitrary[(PartTimeQuestionPage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[PartTimeQuestionPage.type]";\
    print "        value <- arbitrary[PartTimeQuestion].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryPartTimeQuestionPage: Arbitrary[PartTimeQuestionPage.type] =";\
    print "    Arbitrary(PartTimeQuestionPage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/trait ModelGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryPartTimeQuestion: Arbitrary[PartTimeQuestion] =";\
    print "    Arbitrary {";\
    print "      Gen.oneOf(PartTimeQuestion.values.toSeq)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(PartTimeQuestionPage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Migration PartTimeQuestion completed"
