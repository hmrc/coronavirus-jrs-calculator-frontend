# Site-wide Messages
# ----------------------------------------------------------
service.name = Job Retention Scheme calculator

site.back = Back
site.delete = Delete
site.edit = Change
site.hidden-delete = Delete {0}
site.hidden-edit = Change {0}
site.no = No
site.yes = Yes
site.continue = Continue
site.startNow = Start now
site.confirm = Confirm
site.saveAndContinue = Continue
site.submitAndContinue = Submit and continue
site.textarea.char_limit = (Limit is {0} characters)
site.govuk = GOV.UK
site.signOut = Sign out
site.getHelpWithThisPage = Get help with this page
site.notProvided = Not Provided
site.incomplete = Incomplete

footer.accessibility   = Accessibility Statement
footer.cookies         = Cookies
footer.privacy         = Privacy policy
footer.termsConditions = Terms and conditions
footer.govukHelp       = Help using GOV.UK

footer.license.text1 = All content is available under the
footer.license.text2 = Open Government Licence v3.0
footer.license.text3 = except where otherwise stated
footer.license.copyright = © Crown copyright

language.cymraeg = Cymraeg
language.change.cymraeg = Newid yr iaith i’r Gymraeg
language.english = English
language.change.english = Change the language to English
language.switcher = Language switcher

# Timeout Messages
# ----------------------------------------------------------
timeout.title = Your session is about to time out
timeout.message = For security reasons, your session will expire in
timeout.keepAlive = Continue
timeout.signOut = End Session

# BETA Banner
# ----------------------------------------------------------
feedback.before = This is a new service - your
feedback.link = feedback
feedback.after = will help us to improve it.

# Compliance statement
# ----------------------------------------------------------
accessibility.title=Accessibility statement for Job Retention Scheme calculator

## section one
compliant.one.heading=Accessibility statement for Job Retention Scheme calculator
compliant.one.lede=This accessibility statement explains how accessible this service is, what to do if you have difficulty using it, and how to report accessibility problems with the service.
compliant.one.p1.1=This service is part of the wider GOV.UK website. There is a separate
compliant.one.p1.2=accessibility statement
compliant.one.p1.3=for the main GOV.UK website.
compliant.one.p2=This page only contains information about the Job Retention Scheme calculator service, available at www.tax.service.gov.uk/job-retention-scheme-calculator

## section two
compliant.two.heading=Using this service
compliant.two.p1=You can use this calculator to work out the figures you’ll need when you complete an online claim through the Job Retention Scheme.
compliant.two.p2=This service is run by HM Revenue and Customs (HMRC). We want as many people as possible to be able to use this service. This means you should be able to:
compliant.two.l1=change colours, contrast levels and fonts
compliant.two.l2=zoom in up to 300% without the text spilling off the screen
compliant.two.l3=get from the start of the service to the end using just a keyboard
compliant.two.l4=get from the start of the service to the end using speech recognition software
compliant.two.l5=listen to the service using a screen reader (including the most recent versions of JAWS, NVDA and VoiceOver)
compliant.two.p3=We have also made the text in the service as simple as possible to understand.
compliant.two.p4.0=
compliant.two.p4.1=AbilityNet
compliant.two.p4.2=has advice on making your device easier to use if you have a disability.

## section three
compliant.three.heading=How accessible this service is
compliant.three.p1.1=This service is partially compliant with the
compliant.three.p1.2=Web Content Accessibility Guidelines version 2.1 AA standard
compliant.three.p2 =There are no known accessibility issues within this service.

## section five
compliant.five.heading=Reporting accessibility problems with this service
compliant.five.p.1=We are always looking to improve the accessibility of this service. If you find any problems that are not listed on this page or think we are not meeting accessibility requirements, report the
compliant.five.p.2=accessibility problem (opens in a new window or tab)

## section six
compliant.six.heading=What to do if you are not happy with how we respond to your complaint
compliant.six.p.1=The Equality and Human Rights Commission (EHRC) is responsible for enforcing the Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018 (the ‘accessibility regulations’). If you are not happy with how we respond to your complaint,
compliant.six.p.2=contact the Equality Advisory and Support Service
compliant.six.p.3=(EASS), or the
compliant.six.p.4=Equality Commission for Northern Ireland
compliant.six.p.5=(ECNI) if you live in Northern Ireland.

## section seven
compliant.seven.heading=Contacting us by phone or getting a visit from us in person
compliant.seven.p1=We provide a text relay service if you are deaf, hearing impaired or have a speech impediment.
compliant.seven.p2=We can provide a British Sign Language (BSL) interpreter, or you can arrange a visit from an HMRC advisor to help you complete the service.
compliant.seven.p3.1=Find out how to
compliant.seven.p3.2=contact us

## section eight
compliant.eight.heading=Technical information about this service’s accessibility
compliant.eight.p1=HMRC is committed to making this service accessible, in accordance with the Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018.
compliant.eight.p2.1=This service is fully compliant with the
compliant.eight.p2.2=Web Content Accessibility Guidelines version 2.1 AA standard

## section nine
compliant.nine.heading=How we tested this service
compliant.nine.p1=The service was last tested on 5 May 2020 and was checked for compliance with WCAG 2.1 AA.
compliant.nine.p2.1=The service was built using parts that were tested by the
compliant.nine.p2.2=Digital Accessibility Centre
compliant.nine.p2.3=The full service was tested by HMRC and included disabled users.
compliant.nine.p3=This page was prepared on 17 April 2020. It was last updated on 20 May 2020.

date.day = Day
date.month = Month
date.year = Year

error.browser.title.prefix = Error:
error.boolean = Please give an answer
error.invalid_date = Give a correct date
error.date.day_blank = Enter a day
error.date.day_invalid = Give a correct day using numbers 1 to 31
error.date.month_blank = Enter a month
error.date.month_invalid = Enter a month using numbers 1 to 12
error.date.year_blank = Enter a year
error.date.year_invalid = Enter a real year
error.integer = Give an answer in whole numbers
error.non_numeric = Enter only numbers
error.number = Enter a valid number
error.required = Please enter a value
error.summary.title = There is a problem

index.title = Calculate your Job Retention Scheme claim
index.heading = Calculate your Job Retention Scheme claim

session_expired.title = For your security, this service has been reset
session_expired.heading = For your security, this service has been reset
session_expired.guidance = The details you have given have been deleted because you did not continue the service for 15 minutes.
session_expired.restart = Start another calculation

errorPage.title = Sorry, there is a problem with the service
errorPage.heading = Sorry, there is a problem with the service
errorPage.p1 = Try again later.

unauthorised.title = You cannot access this service with this account
unauthorised.heading = You cannot access this service with this account

payMethod.title = How is this employee paid?
payMethod.heading = How is this employee paid?
payMethod.regular= A regular amount each time
payMethod.variable = A variable amount each time
payMethod.error.required = Select one of the options below

payFrequency.title = How often do you pay this employee?
payFrequency.heading = How often do you pay this employee?
payFrequency.weekly = Weekly
payFrequency.fortnightly = Every 2 weeks
payFrequency.fourweekly = Every 4 weeks
payFrequency.monthly = Monthly
payFrequency.error.required = Select one of the options below

rootPage.title = Coronavirus Job Retention Scheme calculator
rootPage.heading = Coronavirus Job Retention Scheme calculator
rootPage.p1 = Use this calculator to work out the figures you’ll need when you complete a claim through the scheme. It also gives a detailed breakdown of calculations for each pay period for your records.
rootPage.p2 = The figures are for one employee, for the claim period you specify. Run the calculator again for any other employees you’re claiming for and add up the results.
rootPage.p3 = The calculator works for most employees paid weekly, 2 weekly, 4 weekly or monthly.
rootPage.p4 = From 1 July, employees can be brought back to work for some of their normal hours. The calculator can take this into account.
rootPage.p5 = It doesn’t work for employees who:
rootPage.p5.l1 = returned from statutory leave such as maternity leave in the last 3 months
rootPage.p5.l2 = get director’s payments
rootPage.p5.l3 = have been transferred under TUPE
rootPage.p5.l4 = have been employed at separate times throughout the year
rootPage.p5.l5 = receive employer pension contributions outside of an auto-enrolment pension scheme
rootPage.p6 = In these cases, work out what you can claim manually using the {0} or seek professional advice.
rootPage.p6.link = calculation guidance
rootPage.p7 = It’s your responsibility to check that the amount you’re claiming for is correct.
rootPage.beforeYouStart.header = Before you start
rootPage.beforeYouStart.p1 = You will need:
rootPage.beforeYouStart.p1.l1 = claim start date (for your first claim, it’s when the first employee started furlough)
rootPage.beforeYouStart.p1.l2 = claim end date (align it with your next payroll run)
rootPage.beforeYouStart.p1.l3 = pay dates (when the employee gets their pay)
rootPage.beforeYouStart.p1.l4 = dates of pay periods (the time periods their pay covers)
rootPage.beforeYouStart.p1.l5 = regular payment amounts
rootPage.beforeYouStart.p1.l6 = number of hours worked (if applicable, after 1 July)
rootPage.beforeYouStart.p1.l7 = amount paid to employee for hours worked (if applicable, after 1 July)
rootPage.beforeYouStart.p1.l8 = additional payments (such as tips, discretionary bonuses, non-cash payments)
rootPage.beforeYouStart.p1.l9 = date furlough ended, if not ongoing

payDate.title = What’s the end of the next pay period after {0}?
payDate.heading = What’s the end of the next pay period after {0}?
payDate.title.firstDate = What’s the last day this employee was paid for before {0}?
payDate.heading.firstDate = What’s the last day this employee was paid for before {0}?
payDate.error.required.all = Enter the date
payDate.error.required.two = The date must include {0} and {1}
payDate.error.required = The date must include {0}
payDate.error.invalid = Enter a real date
payDate.error.mustBeBefore = The date must be before {0}
payDate.error.mustBeAfter = The date must be after {0}
payDate.firstP = This is the end of the last pay period before either the claim start date or the furlough start date, whichever is the latest.
payDate.p = This is the last day in the pay period, not the date they received their pay.
payDate.details.title = What is a pay period?
payDate.details.content =  A ‘pay period’ is the period of time that the employee is paid for, such as weekly or monthly. When we ask for the end date of a pay period, it’s the last day they were paid for. It’s different from the ‘pay date’, which is the date the employee actually gets their pay.

reviewPayDates.title = Pay dates within the claim period
reviewPayDates.heading = Pay dates within the claim period
reviewPayDates.addMore = Do you need to add another pay date for this claim period?
reviewPayDates.error.required = Select yes if reviewPayDates

regularPayAmount.title = On 19 March 2020, what was this employee’s most recent pay amount?
regularPayAmount.heading = On 19 March 2020, what was this employee’s most recent pay amount?
regularPayAmount.p1 = This is the latest payment that was due on or before 19 March, before deductions.
regularPayAmount.p2 = Do not include discretionary payments, non-cash payments or non-monetary benefits.
regularPayAmount.inset = If this employee started work between 1 and 18 March 2020, enter the amount they’ll get paid from now on.
regularPayAmount.salary.error.required = Enter a valid amount
regularPayAmount.salary.error.invalid = Enter a valid amount

nicCategory.title = Do you pay Employers Class 1 National Insurance contributions for this employee?
nicCategory.heading = Do you pay Employers Class 1 National Insurance contributions for this employee?
nicCategory.payable = Yes
nicCategory.nonPayable = No
nicCategory.error.required = Select yes if you pay Employers Class 1 National Insurance contributions

pensionContribution.title = Do you pay pension contributions for this employee?
pensionContribution.heading = Do you pay pension contributions for this employee?
pensionContribution.doesContribute = Yes
pensionContribution.doesNotContribute = No
pensionContribution.error.required = Select yes if you pay pension contributions for this employee

confirmation.title = What you can claim for this employee
confirmation.heading = What you can claim for this employee
confirmation.confirmation.p1 = Amount paid to this furloughed employee
confirmation.confirmation.p2 = Employer National Insurance contributions
confirmation.confirmation.p3 = Employer minimum pension contributions
confirmation.explanation.heading = How these figures were calculated
confirmation.explanation.p = You can view a detailed calculation showing the furlough amounts, employer National Insurance and pension contributions for each pay period in your claim.
confirmation.calculated.on = Calculated on:
confirmation.date.version = (Calculator Version v{0})
confirmation.disclaimer = The results of the calculation rely on the accuracy of the information you entered, for which you are responsible. You cannot claim for more money than you are going to pay out under the scheme.
confirmation.print.this.page = Print or save a copy of this page
confirmation.bullets.heading = These calculations are based on:
confirmation.claimPeriod = Claim period: {0} to {1}
confirmation.furloughPeriod.started = Furlough period: Started {0}
confirmation.furloughPeriod.startedAndEnded = Furlough period: {0} to {1}
confirmation.paid.weekly = They are paid every week
confirmation.paid.fortnightly = They are paid every 2 weeks
confirmation.paid.fourweekly = They are paid every 4 weeks
confirmation.paid.monthly = They are paid every month
confirmation.nic.payable = Their National Insurance category is A, B, C or J
confirmation.nic.nonPayable = Their National Insurance category is H, M or Z
confirmation.pension.doesContribute = They receive employer pension contributions
confirmation.pension.doesNotContribute = They do not receive employer pension contributions
confirmation.breakdown.summary = Detailed breakdown of calculations
confirmation.breakdown.h2 = Breakdown by pay period
confirmation.breakdown.p = You can view a table showing the furlough amounts, employer National Insurance and pension contributions for each pay period in your claim.
confirmation.breakdown.details = Figures for each pay period during the claim
confirmation.breakdown.dt = Pay period
confirmation.breakdown.ending = ending {0}
confirmation.breakdown.furlough = Gross furlough amount
confirmation.breakdown.nic = Employer NI contributions
confirmation.breakdown.pension = Employer minimum pension contributions
confirmation.nextSteps.heading = Next steps
confirmation.nextSteps.li.1 = Make a calculation for any other employee furloughed for all or part of this claim period ({0} to {1}).
confirmation.nextSteps.li.1.2 = Make a note of each set of figures.
confirmation.nextSteps.li.2 = Work out the total amounts to claim for:
confirmation.nextSteps.li.2.1 = furlough amount
confirmation.nextSteps.li.2.2 = employer National Insurance
confirmation.nextSteps.li.2.3 = employer minimum pension contributions
confirmation.nextSteps.li.3.1 = Adjust the total amount of employer National Insurance contributions by subtracting any Employment Allowance used in each pay period.
confirmation.nextSteps.li.3.2 = Work out how much you can claim in total for employer National Insurance contributions (opens in a new window or tab).

confirmation.nextSteps.li.4.1 = Make a claim using {0}.
confirmation.nextSteps.li.4.2 = Job Retention Scheme online claim service (opens in a new window or tab).
confirmation.startAgain = Start another calculation
confirmation.webchat = Webchat help (opens in a new window or tab).

claimPeriodStart.title = What’s the start date of this claim?
claimPeriodStart.heading = What’s the start date of this claim?
claimPeriodStart.p1 = If it’s your first claim, the claim period starts from the date the first employee started furlough.
claimPeriodStart.p2 = If it’s a subsequent claim, make sure the claim period doesn’t overlap your previous claim.
claimPeriodStart.error.required.all = Enter the start date of this claim
claimPeriodStart.error.required.two = The start date must include {0} and {1}
claimPeriodStart.error.required = The start date must include {0}
claimPeriodStart.error.invalid = Enter a real start date
claimPeriodStart.error.outofrange = Enter a date between {0} and {1}
claimPeriodStart.legend = Start date
claimPeriodStart.hint = For example, 1 3 2020

claimPeriodEnd.title = What’s the end date of this claim?
claimPeriodEnd.heading = What’s the end date of this claim?
claimPeriodEnd.p1 = This should be a date that aligns with a payroll run. It can be any date up to 14 days from today’s date.
claimPeriodEnd.p2 = Note that it’s not the same as the furlough end date - furlough may be ongoing at the end of the claim period.
claimPeriodEnd.p3 = If furlough is ongoing when the claim period ends, make another claim later to cover this time.
claimPeriodEnd.details.title = What is a claim period?
claimPeriodEnd.details.p1 = You make a claim under the Job Retention Scheme for a period during which one or more of your employees are furloughed. This is the claim period.
claimPeriodEnd.details.p2 = Include all affected employees in one claim, including employees who start or end furlough on different dates within the claim period.
claimPeriodEnd.details.p3 = You cannot make more than one claim covering the same claim period.
claimPeriodEnd.heading1 = Claim period start date
claimPeriodEnd.heading2 = Claim period end date
claimPeriodEnd.details.p4 = For the first claim, this is the date the first employee was furloughed (other employees may be furloughed at a later date). The earliest the start date can be is 1 March 2020, which is the date the Job Retention Scheme started.
claimPeriodEnd.details.p5 = If employees are still furloughed after the claim period ends, make another claim later to cover the ongoing furlough period. Claim periods cannot overlap.
claimPeriodEnd.details.p6 = This should be a date that aligns with a payroll run. It can be any date up to 14 days from today’s date. Note that it’s not the same as the furlough end date - furlough may be ongoing at the end of the claim period.
claimPeriodEnd.error.required.all = Enter the end date
claimPeriodEnd.error.required.two = The end date must include {0} and {1}
claimPeriodEnd.error.required = The end date must include {0}
claimPeriodEnd.error.invalid = Enter a real end date
claimPeriodEnd.cannot.be.after.policyEnd = The end date cannot be after the scheme end date ({0})
claimPeriodEnd.cannot.be.of.same.month = The claim must start and end in the same calendar month
claimPeriodEnd.cannot.be.before.claimStart = The end date cannot be before the start date
claimPeriodEnd.cannot.be.lessThan.7days = The claim period must be at least 7 days
claimPeriodEnd.cannot.be.after.14days = The end date cannot be more than 14 days after today’s date
claimPeriodEnd.legend = End date
claimPeriodEnd.hint = For example, 31 3 2020

furloughOngoing.title = Has the employee’s furlough ended?
furloughOngoing.1stJuly.title = Has this employee's furlough ended?
furloughOngoing.heading = Has the employee’s furlough ended?
furloughOngoing.1stJuly.heading = Has this employee's furlough ended?
furloughOngoing.ended = Yes
furloughOngoing.ongoing = No, it is ongoing
furloughOngoing.1stJuly.ongoing = No
furloughOngoing.1stJuly.ended = Yes
furloughOngoing.error.required = Select one of the options below
furloughOngoing.1stJuly.p1 = From 1 July, you can bring employees back to work while their furlough is ongoing. You can claim for their usual hours minus the hours they actually worked.

furloughEndDate.title = When did their furlough end?
furloughEndDate.heading = When did their furlough end?
furloughEndDate.hint = For example, 30 4 2020
furloughEndDate.p = To claim under the scheme an employee must be furloughed for at least 3 weeks.
furloughEndDate.1stJuly.p = From 1 July, you can bring employees back to work while their furlough is ongoing. You can claim for their usual hours minus the hours they actually worked.
furloughEndDate.error.required.all = Enter the furlough end date
furloughEndDate.error.required.two = The furlough end date must include {0} and {1}
furloughEndDate.error.required = The furlough end date must include {0}
furloughEndDate.error.invalid = Enter a real furlough end date
furloughEndDate.error.min.max = The furlough end date must be at least 3 weeks after furlough started and before the end of the claim

furloughStartDate.title = When was this employee furloughed?
furloughStartDate.1stJuly.title = When was this employee originally furloughed?
furloughStartDate.heading = When was this employee furloughed?
furloughStartDate.1stJuly.heading = When was this employee originally furloughed?
furloughStartDate.hint = This is the date this employee started furlough. It could be before or after the start date of this claim.
furloughStartDate.p1 = We’re asking because your claim could include employees who were furloughed on different dates.

furloughStartDate.error.required.all = Enter the furlough start date
furloughStartDate.error.required.two = The furlough start date must include {0} and {1}
furloughStartDate.error.required = The furlough start date must include {0}
furloughStartDate.error.invalid = Enter a real furlough start date
furloughStartDate.error.minimum = The furlough start date must be on or after {0}
furloughStartDate.error.maximum = The furlough start date must be before {0}

variableLengthEmployed.title = Was this employee working for you on or before 1 February 2019?
variableLengthEmployed.heading = Was this employee working for you on or before 1 February 2019?
variableLengthEmployed.onOrBefore1Feb2019 = Yes
variableLengthEmployed.after1Feb2019 = No
variableLengthEmployed.error.required = Select one of the options below
variableLengthEmployed.hint = We need this to calculate average pay based on when this employee started work.

employeeStartDate.title = When did this employee start working for you?
employeeStartDate.heading = When did this employee start working for you?
employeeStartDate.error.required.all = Enter the employee start date
employeeStartDate.error.required.two = The employee start date must include {0} and {1}
employeeStartDate.error.required = The employee start date must include {0}
employeeStartDate.error.invalid = Enter a real date
employeeStartDate.hint = For example, 28 11 2019
employeeStartDate.error.min = The employee start date must be on or after {0}
employeeStartDate.error.max = The employee start date must be before they started furlough or on or before 19th March 2020

annualPayAmount.title.after1Feb2019 = What did the employee get paid in total since they started until {0}?
annualPayAmount.heading.after1Feb2019 = What did the employee get paid in total since they started until {0}?
annualPayAmount.title.onOrBefore1Feb2019 = What did this employee earn from 6 April 2019 to {0}?
annualPayAmount.heading.onOrBefore1Feb2019 = What did this employee earn from 6 April 2019 to {0}?
annualPayAmount.error.required = Enter a valid amount
annualPayAmount.error.invalid = Enter a valid amount
annualPayAmount.p1 = This is the total amount before deductions.
annualPayAmount.p2 = Do not include discretionary payments, non-cash payments or non-monetary benefits.

comingSoon.title = We are unable to do this calculation at the moment
comingSoon.heading = We are unable to do this calculation at the moment
comingSoon.p = This will be available in a future version.
comingSoon.start.another = Start another calculation
comingSoon.showCalculateTopupsLink.label = Calculate with out topups
comingSoon.topup.title = We’re unable to calculate claims when pay is topped up
comingSoon.topup.heading = We’re unable to calculate claims when pay is topped up
comingSoon.topup.p = This will be available in a future version.

FurloughPartialPay.title.between = What did the employee get paid between {0} and {1}?
FurloughPartialPay.title.on = What did the employee get paid on {0}?
FurloughPartialPay.heading.between = What did the employee get paid between {0} and {1}?
FurloughPartialPay.heading.on = What did the employee get paid on {0}?
FurloughPartialPay.label = This is for the time this employee was paid when they were not furloughed.
FurloughPartialPay.error.required = Enter a valid amount
FurloughPartialPay.error.invalid = Enter a valid amount
FurloughPartialPay.p = This is for the time this employee was paid when they were not furloughed.

lastPayDate.title = What’s this employee’s pay date for the pay period ending {0}?
lastPayDate.heading = What’s this employee’s pay date for the pay period ending {0}?
lastPayDate.error.required.all = Enter the pay date
lastPayDate.error.required.two = The pay date must include {0} and {1}
lastPayDate.error.required = The pay date must include {0}
lastPayDate.error.invalid = Enter a real date
lastPayDate.error.minimum = The pay date must be on or after {0}
lastPayDate.p1 = This is the date this employee got paid. We’re asking because it may not be the same as the pay period end date.
lastPayDate.p2 = This is needed to calculate National Insurance and pension contributions.
lastPayDate.details.title = What’s the difference between a pay date and a pay period?
lastPayDate.details.p1 = A ‘pay date’ is the date the employee actually gets their pay. It may not be the same as the end of the ‘pay period’. For example, the pay period might be 1 February to 28 February, but the employee gets paid on 27 February.
lastPayDate.details.p2 = A ‘pay period’ is the period of time that the employee is paid for, such as weekly or monthly.

somethingWentWrong.button = Start again

lastYearPay.title = In 2019, what did this employee get paid on {0}?
lastYearPay.heading = In 2019, what did this employee get paid on {0}?
lastYearPay.title.monthly = In 2019, what did this employee get paid in {0}?
lastYearPay.heading.monthly = In 2019, what did this employee get paid in {0}?
lastYearPay.p1 = Do not include discretionary payments, non-cash payments or non-monetary benefits.
lastYearPay.p2 = We need this to work out their average pay based on last year’s amount.
lastYearPay.error.nonNumeric = Enter the salary using numbers
lastYearPay.error.required = Enter the salary

amount.error.max.2.decimals = The amount cannot have more than two decimal places
amount.error.must.be.positive = Enter an amount greater than 0
amount.error.negative = The amount cannot be negative

topupPeriods.title = When did you top up this employee’s pay?
topupPeriods.heading = When did you top up this employee’s pay?
topupPeriods.hint = Select all that apply.
topupPeriods.period = Pay period end: {0}
topupPeriods.amount = Amount before top-up: £{0}
topupPeriods.checkYourAnswersLabel = Which of these are you topping up?
topupPeriods.error.required = Select the pay periods you are topping up

topUpAmount.title = What’s the top up amount for the pay period ending {0}?
topUpAmount.heading = What’s the top up amount for the pay period ending {0}?
topUpAmount.p1 = Furlough pay for this pay period before top up: £{0}
topUpAmount.p2 = Only include the amount of top up. Do not include the employee’s furlough pay or any other additional pay.
topUpAmount.error.required = Enter the top up amount for this pay period
topUpAmount.error.nonNumeric = Enter the top up amount in numbers

additionalPaymentStatus.heading = Did this employee get any additional payments?
additionalPaymentStatus.title = Did this employee get any additional payments?
additionalPaymentStatus.p1 = Additional payments include payments you’re not contractually obliged to pay, non-cash payments and non-monetary benefits.
additionalPaymentStatus.p2 = We’re asking because it affects National Insurance contributions.
additionalPaymentStatus.yesAdditionalPayments = Yes
additionalPaymentStatus.noAdditionalPayments = No
additionalPaymentStatus.error.required = Select 'Yes' if this employee got additional payments

additionalPaymentsDetails.summary = Examples of additional payments
additionalPaymentsDetails.p1 = Additional payments include:
additionalPaymentsDetails.l1 = discretionary payments you’re not contractually obliged to pay, including:
additionalPaymentsDetails.l1.l1 = tips
additionalPaymentsDetails.l1.l2 = discretionary bonuses
additionalPaymentsDetails.l1.l3 = discretionary commission payments
additionalPaymentsDetails.l2 = non-cash payments
additionalPaymentsDetails.l3 = non-monetary benefits like benefits in kind (such as a company car) and salary sacrifice schemes that reduce taxable pay

additionalPaymentPeriods.title = When did this employee get additional payments?
additionalPaymentPeriods.heading = When did this employee get additional payments?
additionalPaymentPeriods.hint = Select all that apply.
additionalPaymentPeriods.period = Pay period end: {0}
additionalPaymentPeriods.error.required = Select the pay periods when there were additional payments

additionalPaymentAmount.title = What additional payments did this employee get in the pay period ending {0}?
additionalPaymentAmount.heading = What additional payments did this employee get in the pay period ending {0}?
additionalPaymentAmount.p1 = Do not include their regular payments in this amount.
additionalPaymentAmount.error.required = Enter the additional payment amount for this pay period
additionalPaymentAmount.error.nonNumeric = Enter the additional payment amount in numbers

topUpStatus.title = Have you topped up this employee’s pay?
topUpStatus.heading = Have you topped up this employee’s pay?
topUpStatus.toppedUp = Yes
topUpStatus.notToppedUp = No
topUpStatus.p1 = You can top up the remaining 20% of your employees’ pay while they’re furloughed.
topUpStatus.p2 = We’re asking because it affects National Insurance contributions.
topUpStatus.error.required = Select ‘Yes’ if you topped up this employee’s pay

whatToInclude.summary = What should be included in this amount?
whatToInclude.include = Include:
whatToInclude.include.l1 = regular wages you pay to this employee
whatToInclude.include.l2 = non-discretionary overtime
whatToInclude.include.l3 = non-discretionary fees
whatToInclude.include.l4 = non-discretionary commission payments
whatToInclude.include.l5 = piece rate payments
whatToInclude.doNotInclude = Do not include:
whatToInclude.doNotInclude.l1 = discretionary payments you’re not contractually obliged to pay, including:
whatToInclude.doNotInclude.l1.l1 = tips
whatToInclude.doNotInclude.l1.l2 = discretionary bonuses
whatToInclude.doNotInclude.l1.l3 = discretionary commission payments
whatToInclude.doNotInclude.l2 = non-cash payments
whatToInclude.doNotInclude.l3 = non-monetary benefits like benefits in kind (such as a company car) and salary sacrifice schemes that reduce taxable pay

detailedBreakdown.p1.regular = You told us this employee gets paid a regular amount each time. We’ve worked out their daily earnings and multiplied by the number of furlough days in each pay period. The furlough grant is 80% of this.
detailedBreakdown.p1.average = You told us this employee gets paid a variable amount each time and has worked for you for less than 12 months. We’ve worked out their average daily earnings by dividing the total pay in this employment by the number of calendar days they’ve worked for you. Then we’ve multiplied that by the number of furlough days in each pay period. The furlough grant is 80% of this.
detailedBreakdown.p1.cylb.1 = You told us your employee gets paid a variable amount each time and has worked for you for more than 12 months. There are 2 methods we can use to work out pay. We’ve used the one that gave the higher figure. The furlough grant is 80% of this.
detailedBreakdown.p1.cylb.2 = Method 1: we’ve taken the amounts they were paid for equivalent pay periods in 2019 and applied this to the number of furlough days in each pay period.
detailedBreakdown.p1.cylb.3 = Method 2: we’ve worked out their average daily earnings in the last tax year, by dividing their total pay by the number of calendar days between 6 April 2019 and the day before furlough (or 5 April 2020 if later). Then we’ve multiplied that by the number of furlough days in each pay period.
detailedBreakdown.p2 = There’s a maximum amount you can claim for furlough grant and Employer National Insurance contributions. If this affects your claim, we’ve adjusted the calculations. 
detailedBreakdown.p2.a = Work out the maximum wage amount you can claim (opens in new tab).
detailedBreakdown.p2.a.href = https://www.gov.uk/guidance/work-out-80-of-your-employees-wages-to-claim-through-the-coronavirus-job-retention-scheme#eighty-percent
detailedBreakdown.p3 = Calculations are rounded to the nearest penny unless otherwise stated.
detailedBreakdown.h3 = For pay period {0} to {1}

referencePayBreakdown.h4 = Calculate pay based on furlough days
referencePayBreakdown.result = Total pay based on furlough days = £{0}

referencePayBreakdown.regular.p1 = Take the pay in pay period:
referencePayBreakdown.regular.l1 = Start with £{0} (from pay period).
referencePayBreakdown.regular.l2 = Divide by {0} (days in pay period).
referencePayBreakdown.regular.l3 = Multiply by {0} (furlough days).

referencePayBreakdown.regular.employerFunded.h4 = Calculate employer-funded pay
referencePayBreakdown.regular.employerFunded.l1 = Start with £{0} (from pay period).
referencePayBreakdown.regular.employerFunded.l2 = Minus £{0} (pay based on furlough days).
referencePayBreakdown.regular.employerFunded.result = Employer-funded pay for the remaining {0} days in pay period = £{1}

referencePayBreakdown.average.p1 = Take the total pay from employee start date (or 6 April 2019, if earlier) to day before the employee's furlough start date (or 5 April 2020, if later).
referencePayBreakdown.average.p1.partOfCylb = Method 2: take the total pay from employee start date (or 6 April 2019, if earlier) to day before the employee's furlough start date (or 5 April 2020, if later).
referencePayBreakdown.average.l1 = Start with £{0} (total pay).
referencePayBreakdown.average.l2 = Divide by {0} (days employed).
referencePayBreakdown.average.l3 = Multiply by {0} (furlough days).
referencePayBreakdown.average.result = Total average pay last year = £{0}

referencePayBreakdown.cylb.p1 = Method 1: take pay from same dates last year.
referencePayBreakdown.cylb.twoPeriods = Last year’s dates overlap two pay periods so in period one:
referencePayBreakdown.cylb.l1 = Start with £{0} (from pay day {1} last year).
referencePayBreakdown.cylb.l2 = Divide by {0} (days in pay period).
referencePayBreakdown.cylb.l3 = Multiply by {0} (furlough days).
referencePayBreakdown.cylb.periodTotal = Total for period = £{0}
referencePayBreakdown.cylb.then = Then:
referencePayBreakdown.cylb.thenPeriodTwo = Then in period two:
referencePayBreakdown.cylb.addTotals = Add £{0} + £{1} (the totals from both pay periods).
referencePayBreakdown.cylb.result = Total pay from same dates last year = £{0}
referencePayBreakdown.cylb.higherOf = Then take the higher figure from methods 1 and 2:
referencePayBreakdown.cylb.higherOf.cylb = £{0} (method 1: pay from same dates last year).
referencePayBreakdown.cylb.higherOf.average = £{0} (method 2: average pay last year).

furloughBreakdown.h4 = Furlough grant
furloughBreakdown.l1 = Take £{0} (pay based on furlough days).
furloughBreakdown.l2 = Multiply by 80%
furloughBreakdown.total = Total furlough grant for pay period = £{0}
furloughBreakdown.furloughCap.p1 = Calculated furlough grant = £{0}
furloughBreakdown.furloughCap.p2 = This exceeds the maximum furlough grant for this pay period, which is:
furloughBreakdown.furloughCap.fullPeriodCap = £{0}
furloughBreakdown.furloughCap.periodSpansMonthCap = {0} furlough days in {1} at £{2} + {3} furlough days in {4} at £{5} = £{6}.
furloughBreakdown.furloughCap.partialPeriodCap ={0} furlough days in {1} at £{2} = £{3}
furloughBreakdown.furloughCap.p3 = Therefore we use the maximum furlough grant amount.

nicBreakdown.h4 = Employer National Insurance contributions
nicBreakdown.l1 = Start with £{0} (furlough grant).
nicBreakdown.l2 = Add £{0} (employer-funded pay).
nicBreakdown.l3 = Add £{0} (employer top up).
nicBreakdown.l4 = Add £{0} (additional pay).
nicBreakdown.l5 = Round down to the nearest pound.
nicBreakdown.l6.20 = Deduct £{0} (National Insurance contribution threshold for 19/20 tax year).
nicBreakdown.l6.21 = Deduct £{0} (National Insurance contribution threshold for 20/21 tax year).
nicBreakdown.l7 = Multiply by 13.8%.
nicBreakdown.l8 = Divide by {0} (days in pay period).
nicBreakdown.l9 = Multiply by {0} (furlough days).
nicBreakdown.l10 = Divide by £{0} (furlough grant plus top up).
nicBreakdown.l11 = Multiply by £{0} (furlough grant).
nicBreakdown.nicCap.p1 = Calculated National Insurance contribution grant = £{0}
nicBreakdown.nicCap.p2 = This exceeds the maximum National Insurance contribution grant for this pay period, which is:
nicBreakdown.nicCap.l1 = £{0} furlough grant x 13.8% = £{1}.
nicBreakdown.nicCap.p3 = Therefore we use the maximum National Insurance contribution grant amount.
nicBreakdown.total = Total NI grant for pay period = £{0}

pensionBreakdown.h4 = Employer minimum pension contributions
pensionBreakdown.l1 = Start with £{0} (furlough grant).
pensionBreakdown.l2 = Round down to the nearest pound.
pensionBreakdown.l3.full.20 = Deduct £{0} (Lower Level of Qualifying Earnings for 19/20 tax year).
pensionBreakdown.l3.full.21 = Deduct £{0} (Lower Level of Qualifying Earnings for 20/21 tax year).
pensionBreakdown.l3.partial.20 = Deduct £{0} (£{1} Lower Level of Qualifying Earnings for 19/20 tax year, divide by {2} days in pay period and multiply by {3} furlough days).
pensionBreakdown.l3.partial.21 = Deduct £{0} (£{1} Lower Level of Qualifying Earnings for 20/21 tax year, divide by {2} days in pay period and multiply by {3} furlough days).
pensionBreakdown.l4 = Multiply by 3%.
pensionBreakdown.total = Total pension grant for pay period = £{0}

claimPeriodQuestion.title = Do you want to use the same claim period?
claimPeriodQuestion.heading = Do you want to use the same claim period?
claimPeriodQuestion.claimOnSamePeriod = Yes
claimPeriodQuestion.claimOnDifferentPeriod = No
claimPeriodQuestion.error.required = Select one of the options below
claimPeriodQuestion.start = Start: 
claimPeriodQuestion.end = End: 

furloughPeriodQuestion.title = Has this employee furloughed for the same time?
furloughPeriodQuestion.heading = Has this employee furloughed for the same time?
furloughPeriodQuestion.furloughedOnSamePeriod = Yes
furloughPeriodQuestion.furloughedOnDifferentPeriod = No
furloughPeriodQuestion.error.required = Select one of the options below
furloughPeriodQuestion.start = Start: 
furloughPeriodQuestion.end = End: 
furloughPeriodQuestion.ongoing = Ongoing

payPeriodQuestion.title = Do you want to use the same pay periods?
payPeriodQuestion.heading = Do you want to use the same pay periods?
payPeriodQuestion.useSamePayPeriod = Yes
payPeriodQuestion.useDifferentPayPeriod = No
payPeriodQuestion.error.required = Select one of the options below
payPeriodQuestion.period.text = from {0} to {1}

partTimePeriods.title = When did this employee work during the claim period?
partTimePeriods.heading = When did this employee work during the claim period?
partTimePeriods.hint = Select all that apply.
partTimePeriods.period = Pay period end: {0}
partTimePeriods.error.required = Select the pay periods when the employee worked

partTimeQuestion.title = Has this employee done any work during the claim period?
partTimeQuestion.heading = Has this employee done any work during the claim period?
partTimeQuestion.p1 = From the 1 July employees are able to alternate between furlough and employee funded work during the claim period.
partTimeQuestion.partTimeYes = Yes
partTimeQuestion.partTimeNo = No
partTimeQuestion.error.required = Select one of the options below

partTimeHours.title = What hours did this employee actually work between {0} and {1}?
partTimeHours.heading = What hours did this employee actually work between {0} and {1}?
partTimeHours.partial = These are the dates from in the pay period {0} to {1} that fall inside the claim period.
partTimeHours.p1 = For example, 37.5 hours
partTimeHours.hint = Hours
partTimeHours.error.required = Enter the part time hours for this pay period
partTimeHours.error.min = The part time hours cannot be negative
partTimeHours.error.max = Enter a real part time hours
partTimeHours.error.nonNumeric = Enter the part time hours using numbers

partTimeNormalHours.title = What would this employee’s usual hours have been between {0} and {1}?
partTimeNormalHours.heading = What would this employee’s usual hours have been between {0} and {1}?
partTimeNormalHours.partial = These are the dates from in the pay period {0} to {1} that fall inside the claim period.
partTimeNormalHours.p1 = For example, 37.5 hours
partTimeNormalHours.hint = Hours
partTimeNormalHours.error.required = Enter the usual hours for this pay period
partTimeNormalHours.error.min = The usual hours cannot be negative
partTimeNormalHours.error.max = Enter a real usual hours
partTimeNormalHours.error.nonNumeric = Enter the usual hours using numbers

phaseTwoDetailedBreakdown.p1.regular = You told us this employee gets paid a regular amount each time. We’ve worked out their daily earnings and multiplied by the number of furlough days and furlough hours in each pay period. The furlough grant is 80% of this.
phaseTwoDetailedBreakdown.p1.average = You told us this employee gets paid a variable amount each time and has worked for you for less than 12 months. We’ve worked out their average daily earnings in the last tax year, by dividing their total pay by the number of calendar days between 6 April 2019 and the day before furlough (or 5 April 2020 if later). Then we’ve multiplied that by the number of furlough days and furlough hours in each pay period. The furlough grant is 80% of this.
phaseTwoDetailedBreakdown.p1.cylb.1 = You told us your employee gets paid a variable amount each time and has worked for you for more than 12 months. They have worked during the claim period. There are 2 methods we can use to work out pay. We’ve used the one that gave the higher figure. The furlough grant is 80% of this.
phaseTwoDetailedBreakdown.p1.cylb.2 = Method 1: we’ve taken the amounts they were paid for equivalent pay periods in 2019 and applied this to the number of furlough days and furlough hours in each pay period.
phaseTwoDetailedBreakdown.p1.cylb.3 = Method 2: we’ve worked out their average daily earnings in the last tax year, by dividing their total pay by the number of calendar days between 6 April 2019 and the day before furlough (or 5 April 2020 if later). Then we’ve multiplied that by the number of furlough days and furlough hours in each pay period.
phaseTwoDetailedBreakdown.p2 = There’s a maximum amount you can claim for furlough grant and Employer National Insurance contributions. If this affects your claim, we’ve adjusted the calculations. 
phaseTwoDetailedBreakdown.p2.a = Work out the maximum wage amount you can claim (opens in new tab).
phaseTwoDetailedBreakdown.p2.a.href = https://www.gov.uk/guidance/work-out-80-of-your-employees-wages-to-claim-through-the-coronavirus-job-retention-scheme#eighty-percent
phaseTwoDetailedBreakdown.p3 = Calculations are rounded to the nearest penny unless otherwise stated.
phaseTwoDetailedBreakdown.h3 = For pay period {0} to {1}

phaseTwoReferencePayBreakdown.h4 = Calculate pay based on furlough days

phaseTwoReferencePayBreakdown.regular.p1 = Take the pay in pay period:
phaseTwoReferencePayBreakdown.regular.days.l1 = Start with £{0} (from pay period).
phaseTwoReferencePayBreakdown.regular.days.l2 = Divide by {0} (days in pay period).
phaseTwoReferencePayBreakdown.regular.days.l3 = Multiply by {0} (furlough days).
phaseTwoReferencePayBreakdown.regular.daysResult = Total pay based on furlough days = £{0}
phaseTwoReferencePayBreakdown.regular.then = Then:
phaseTwoReferencePayBreakdown.regular.hours.l1 = Start with £{0} (total pay based on furlough days).
phaseTwoReferencePayBreakdown.regular.hours.l2 = Divide by {0} (usual hours).
phaseTwoReferencePayBreakdown.regular.hours.l3 = Multiply by {0} (furlough hours).
phaseTwoReferencePayBreakdown.regular.hoursResult = Total pay based on hours worked in this pay period = £{0}

phaseTwoReferencePayBreakdown.average.p1 = Take the total pay from employee start date (or 6 April 2019, if earlier) to day before the employee's furlough start date (or 5 April 2020, if later).
phaseTwoReferencePayBreakdown.average.p1.partOfCylb = Method 2: take the total pay from employee start date (or 6 April 2019, if earlier) to day before the employee's furlough start date (or 5 April 2020, if later).
phaseTwoReferencePayBreakdown.average.days.l1 = Start with £{0} (total pay).
phaseTwoReferencePayBreakdown.average.days.l2 = Divide by {0} (days employed).
phaseTwoReferencePayBreakdown.average.days.l3 = Multiply by {0} (furlough days).
phaseTwoReferencePayBreakdown.average.daysResult = Total pay based on furlough days = £{0}
phaseTwoReferencePayBreakdown.average.then = Then:
phaseTwoReferencePayBreakdown.average.hours.l1 = Start with £{0} (total pay based on furlough days).
phaseTwoReferencePayBreakdown.average.hours.l2 = Divide by {0} (usual hours).
phaseTwoReferencePayBreakdown.average.hours.l3 = Multiply by {0} (furlough hours).
phaseTwoReferencePayBreakdown.average.hoursResult = Total pay based on hours worked in this pay period = £{0}

phaseTwoReferencePayBreakdown.cylb.p1 = Method 1: take pay from same dates last year.
phaseTwoReferencePayBreakdown.cylb.twoPeriods = Last year’s dates overlap two pay periods so in period one:
phaseTwoReferencePayBreakdown.cylb.l1 = Start with £{0} (from pay day {1} last year).
phaseTwoReferencePayBreakdown.cylb.l2 = Divide by {0} (days in pay period).
phaseTwoReferencePayBreakdown.cylb.l3 = Multiply by {0} (furlough days).
phaseTwoReferencePayBreakdown.cylb.periodOneTotal = Total for period one = £{0}
phaseTwoReferencePayBreakdown.cylb.then = Then:
phaseTwoReferencePayBreakdown.cylb.thenPeriodTwo = Then in period two:
phaseTwoReferencePayBreakdown.cylb.periodTwoTotal = Total for period two = £{0}
phaseTwoReferencePayBreakdown.cylb.addTotals = Add £{0} + £{1} (the totals from both pay periods).
phaseTwoReferencePayBreakdown.cylb.daysResult = Total pay from same dates last year = £{0}
phaseTwoReferencePayBreakdown.cylb.hours.l1 = Start with £{0} (total pay from same dates last year).
phaseTwoReferencePayBreakdown.cylb.hours.l2 = Divide by {0} (usual hours).
phaseTwoReferencePayBreakdown.cylb.hours.l3 = Multiply by {0} (furlough hours).
phaseTwoReferencePayBreakdown.cylb.hoursResult = Total pay based on hours worked in this pay period = £{0}

phaseTwoReferencePayBreakdown.cylb.higherOf = Then take the higher figure from methods 1 and 2:
phaseTwoReferencePayBreakdown.cylb.higherOf.cylb = £{0} (method 1: pay from same dates last year).
phaseTwoReferencePayBreakdown.cylb.higherOf.average = £{0} (method 2: average pay last year).
phaseTwoReferencePayBreakdown.cylb.higherOf.result = Total pay based on hours worked in this pay period = £{0}

phaseTwoFurloughBreakdown.h4 = Furlough grant
phaseTwoFurloughBreakdown.l1 = Take £{0} (pay based on furlough days).
phaseTwoFurloughBreakdown.l1.partTime = Take £{0} (pay based on hours worked in this pay period).
phaseTwoFurloughBreakdown.l2 = Multiply by 80%
phaseTwoFurloughBreakdown.total = Total furlough grant for pay period = £{0}
phaseTwoFurloughBreakdown.furloughCap.p1 = Calculated furlough grant = £{0}
phaseTwoFurloughBreakdown.furloughCap.p2 = This exceeds the maximum furlough grant for this pay period, which is:
phaseTwoFurloughBreakdown.furloughCap.fullPeriodCap.partTime = £{0} divided by {1} usual hours multiplied by {2} furlough hours = £{3}
phaseTwoFurloughBreakdown.furloughCap.periodSpansMonthCap.partTime = {0} furlough days in {1} at £{2} + {3} furlough days in {4} at £{5} divided by {6} usual hours multiplied by {7} usual hours = £{8}.
phaseTwoFurloughBreakdown.furloughCap.partialPeriodCap.partTime ={0} furlough days in {1} at £{2} divided by {3} usual hours multiplied by {4} furlough hours = £{5}.
phaseTwoFurloughBreakdown.furloughCap.p3 = Therefore we use the maximum furlough grant amount.

phaseTwoNicBreakdown.h4 = Employer National Insurance contributions
phaseTwoNicBreakdown.l1 = Start with £{0} (furlough grant).
phaseTwoNicBreakdown.l2 = Round down to the nearest pound.
phaseTwoNicBreakdown.l3 = Deduct £{0} (National Insurance contribution threshold for 20/21 tax year).
phaseTwoNicBreakdown.l3.partial = Deduct £{0} (£{1} National Insurance contribution threshold for 20/21 tax year, divide by {2} days in pay period and multiply by {3} furlough days).
phaseTwoNicBreakdown.l3.partTime = Deduct £{0} (£{1} National Insurance contribution threshold for 20/21 tax year, divide by {2} usual hours, multiply by {3} furlough hours).
phaseTwoNicBreakdown.l3.partial.partTime = Deduct £{0} (£{1} National Insurance contribution threshold for 20/21 tax year, divide by {2} days in pay period and multiply by {3} furlough days, divide by {4} usual hours, multiply by {5} furlough hours).
phaseTwoNicBreakdown.l4 = Multiply by 13.8%.
phaseTwoNicBreakdown.total = Total NI grant for pay period = £{0}

phaseTwoPensionBreakdown.h4 = Employer minimum pension contributions
phaseTwoPensionBreakdown.l1 = Start with £{0} (furlough grant).
phaseTwoPensionBreakdown.l2 = Round down to the nearest pound.
phaseTwoPensionBreakdown.l3 = Deduct £{0} (Lower Level of Qualifying Earnings for 20/21 tax year).
phaseTwoPensionBreakdown.l3.partial = Deduct £{0} (£{1} Lower Level of Qualifying Earnings for 20/21 tax year, divide by {2} days in pay period and multiply by {3} furlough days).
phaseTwoPensionBreakdown.l3.partTime = Deduct £{0} (£{1} Lower Level of Qualifying Earnings for 20/21 tax year, divide by {2} usual hours, multiply by {3} furlough hours).
phaseTwoPensionBreakdown.l3.partial.partTime = Deduct £{0} (£{1} Lower Level of Qualifying Earnings for 20/21 tax year, divide by {2} days in pay period and multiply by {3} furlough days, divide by {4} usual hours, multiply by {5} furlough hours).
phaseTwoPensionBreakdown.l4 = Multiply by 3%.
phaseTwoPensionBreakdown.total = Total pension grant for pay period = £{0}
